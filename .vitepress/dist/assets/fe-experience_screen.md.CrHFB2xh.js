import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"접근 할 수 없는 팝업","description":"","frontmatter":{},"headers":[],"relativePath":"fe-experience/screen.md","filePath":"fe-experience/screen.md"}'),t={name:"fe-experience/screen.md"};function h(p,s,e,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="접근-할-수-없는-팝업" tabindex="-1">접근 할 수 없는 팝업 <a class="header-anchor" href="#접근-할-수-없는-팝업" aria-label="Permalink to &quot;접근 할 수 없는 팝업&quot;">​</a></h1><blockquote><p>FE 코드리뷰 발표자료</p></blockquote><h2 id="📌-시작하며" tabindex="-1">📌 시작하며 <a class="header-anchor" href="#📌-시작하며" aria-label="Permalink to &quot;📌 시작하며&quot;">​</a></h2><p>여러분, 간단한 테스트 하나 해볼게요.<br> 우리 서비스에서 팝업이 하나 떴습니다.<br> 스크린리더 사용자에게는 어떻게 들릴까요?</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>A) &quot;모달 다이얼로그가 열렸습니다&quot;</span></span>
<span class="line"><span>B) &quot;확인하세요! 중요한 내용입니다&quot;</span></span>
<span class="line"><span>C) &quot;............ (아무 소리도 안 남)&quot;</span></span></code></pre></div><p><strong>정답은 C입니다.</strong></p><p>아무 소리도 나지 않아요.<br> 팝업은 화면에 떴지만, 스크린리더는 침묵합니다.</p><p>왜 그럴까요? 오늘은 이 문제를 파헤쳐보려고 합니다.</p><h2 id="🎭-실제-사용자는-뭘-경험할까" tabindex="-1">🎭 실제 사용자는 뭘 경험할까 <a class="header-anchor" href="#🎭-실제-사용자는-뭘-경험할까" aria-label="Permalink to &quot;🎭 실제 사용자는 뭘 경험할까&quot;">​</a></h2><h3 id="시나리오-picks-추천-도서를-받기-위한-평가-늘리기-버튼-클릭" tabindex="-1">시나리오: PICKS 추천 도서를 받기 위한 평가 늘리기 버튼 클릭! <a class="header-anchor" href="#시나리오-picks-추천-도서를-받기-위한-평가-늘리기-버튼-클릭" aria-label="Permalink to &quot;시나리오: PICKS 추천 도서를 받기 위한 평가 늘리기 버튼 클릭!&quot;">​</a></h3><h4 id="시각적으로-서비스를-이용하는-사람" tabindex="-1">시각적으로 서비스를 이용하는 사람: <a class="header-anchor" href="#시각적으로-서비스를-이용하는-사람" aria-label="Permalink to &quot;시각적으로 서비스를 이용하는 사람:&quot;">​</a></h4><ol><li>버튼 클릭</li><li>팝업 확인</li><li>상품 리스트 중에서 &quot;읽어보고 싶어요&quot; / &quot;취향이 아니에요&quot; 버튼을 클릭</li><li>반영되었다는 toast 메시지를 확인하고 다음 상품의 설문을 진행</li><li>모든 평가 완료</li><li>확인 버튼 클릭으로 마무리</li></ol><h4 id="스크린리더로-서비스를-이용하는-사람" tabindex="-1">스크린리더로 서비스를 이용하는 사람: <a class="header-anchor" href="#스크린리더로-서비스를-이용하는-사람" aria-label="Permalink to &quot;스크린리더로 서비스를 이용하는 사람:&quot;">​</a></h4><ol><li>버튼 클릭</li><li>(...)</li><li>&quot;뭔가 일어난 건가? 담긴 건가?&quot;</li><li>Tab 키를 몇 번 눌러봄</li><li>갑자기 포커스가 엉뚱한 곳으로</li><li>혼란스러움</li></ol><p><strong>차이가 보이시나요?</strong></p><hr><h2 id="⚠️-그럼-뭐가-기술적으로-문제일까요" tabindex="-1">⚠️ 그럼 뭐가 기술적으로 문제일까요? <a class="header-anchor" href="#⚠️-그럼-뭐가-기술적으로-문제일까요" aria-label="Permalink to &quot;⚠️ 그럼 뭐가 기술적으로 문제일까요?&quot;">​</a></h2><h3 id="문제-1-역할이-없는-요소" tabindex="-1">문제 1: 역할이 없는 요소 <a class="header-anchor" href="#문제-1-역할이-없는-요소" aria-label="Permalink to &quot;문제 1: 역할이 없는 요소&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ 현재</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modal-overlay&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modal-content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{children}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>스크린리더는 이게 중요한 팝업인지 모릅니다.<br> 그냥 수많은 div 중 하나로 인식하죠.</p><h3 id="문제-2-포커스-관리-부재" tabindex="-1">문제 2: 포커스 관리 부재 <a class="header-anchor" href="#문제-2-포커스-관리-부재" aria-label="Permalink to &quot;문제 2: 포커스 관리 부재&quot;">​</a></h3><p>팝업이 떴는데 포커스는 여전히 뒤에 있는 버튼에 머물러 있습니다.<br> 스크린리더 사용자는 팝업이 떴다는 걸 인지하기 어렵습니다.</p><h3 id="문제-3-컨텍스트-단절" tabindex="-1">문제 3: 컨텍스트 단절 <a class="header-anchor" href="#문제-3-컨텍스트-단절" aria-label="Permalink to &quot;문제 3: 컨텍스트 단절&quot;">​</a></h3><p>ESC 키로 팝업을 닫을 수는 있습니다.<br> 하지만 스크린리더는 팝업이 닫혔다는 걸 알려주지 않습니다.</p><h3 id="문제-4-배경-간섭" tabindex="-1">문제 4: 배경 간섭 <a class="header-anchor" href="#문제-4-배경-간섭" aria-label="Permalink to &quot;문제 4: 배경 간섭&quot;">​</a></h3><p>팝업 뒤의 콘텐츠도 여전히 접근 가능합니다.<br> Tab 키를 누르면 팝업 안팎을 오가며 혼란스러워집니다.</p><hr><h2 id="💡-해결-방법" tabindex="-1">💡 해결 방법 <a class="header-anchor" href="#💡-해결-방법" aria-label="Permalink to &quot;💡 해결 방법&quot;">​</a></h2><p>하나씩 해결해보겠습니다.</p><h3 id="_1단계-역할-부여하기" tabindex="-1">1단계: 역할 부여하기 <a class="header-anchor" href="#_1단계-역할-부여하기" aria-label="Permalink to &quot;1단계: 역할 부여하기&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ 개선</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dialog&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    aria-modal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;true&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    aria-labelledby</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modal-title&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    aria-describedby</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modal-desc&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modal-title&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;장바구니&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modal-desc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;상품이 장바구니에 담겼습니다&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {children}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TOAST&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>효과:</strong><br> 이제 스크린리더가 이렇게 읽어줍니다:<br><em>&quot;다이얼로그. 장바구니. 상품이 장바구니에 담겼습니다.&quot;</em></p><h4 id="💡-배경지식" tabindex="-1">💡 배경지식 <a class="header-anchor" href="#💡-배경지식" aria-label="Permalink to &quot;💡 배경지식&quot;">​</a></h4><p><strong>Accessible Name</strong><br> 스크린리더가 요소를 포커스했을 때 읽는 값입니다. 다음 중 하나로 결정됩니다:</p><ol><li><strong>author</strong>: 특별한 속성을 사용해서 정하는 값 <ul><li><code>aria-label</code>, <code>aria-labelledby</code>, <code>alt</code> (img 태그)</li></ul></li><li><strong>contents</strong>: 요소의 텍스트 값 <ul><li>우선순위: author &gt; contents</li></ul></li></ol><p><strong>Role</strong><br> 스크린리더가 요소를 어떤 방식으로 다룰지 결정하는 속성입니다.<br> 시멘틱 태그의 경우 이미 role을 가지고 있으며, role마다 기대되는 스크린리더 동작이 있습니다.</p><p>예시: <code>role=&#39;button&#39;</code></p><ul><li>요소의 Accessible Name을 읽은 뒤 &quot;버튼&quot;을 붙여 읽음</li><li>자식 요소의 Name을 모아서 contents로 사용</li></ul><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aria-label</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;추천도서평가&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    평가하기</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 스크린리더가 읽는 것: &quot;추천도서평가 버튼&quot;</span></span></code></pre></div><p><strong>dialog와 aria-modal</strong></p><ul><li><code>role=&quot;dialog&quot;</code>: 사용자가 상호작용할 수 있는 대화상자를 의미</li><li><code>aria-modal=&quot;true&quot;</code>: 스크린리더가 dialog 밖의 요소에 포커스할 수 없게 만드는 속성</li><li>스크린리더가 dialog만 포커스하게 되므로 사용자가 dialog의 존재를 명확히 인지할 수 있음</li></ul><hr><h3 id="_2단계-포커스-자동-이동" tabindex="-1">2단계: 포커스 자동 이동 <a class="header-anchor" href="#_2단계-포커스-자동-이동" aria-label="Permalink to &quot;2단계: 포커스 자동 이동&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> modalRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HTMLDivElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstFocusable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modalRef.current?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;button, [href], input, select, textarea, [tabindex]:not([tabindex=&quot;-1&quot;])&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (firstFocusable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        firstFocusable.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, [])</span></span></code></pre></div><p><strong>효과:</strong><br> 팝업이 열리면 자동으로 첫 번째 버튼으로 포커스가 이동합니다.</p><hr><h3 id="_3단계-포커스-가두기-focus-trap" tabindex="-1">3단계: 포커스 가두기 (Focus Trap) <a class="header-anchor" href="#_3단계-포커스-가두기-focus-trap" aria-label="Permalink to &quot;3단계: 포커스 가두기 (Focus Trap)&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleKeyDown</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> KeyboardEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Tab&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> focusables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modalRef.current?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelectorAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;button, [href], input, select, textarea, [tabindex]:not([tabindex=&quot;-1&quot;])&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> first</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> focusables?.[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> last</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> focusables?.[focusables.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.shiftKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.activeElement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> first) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        last?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e.shiftKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.activeElement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> last) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        first?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>효과:</strong><br> 이제 Tab 키를 눌러도 팝업 밖으로 나가지 않습니다.</p><hr><h3 id="_4단계-배경-비활성화" tabindex="-1">4단계: 배경 비활성화 <a class="header-anchor" href="#_4단계-배경-비활성화" aria-label="Permalink to &quot;4단계: 배경 비활성화&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (main) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        main.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aria-hidden&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;true&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        main?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aria-hidden&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, [])</span></span></code></pre></div><p><strong>효과:</strong><br> 배경 콘텐츠는 스크린리더에서 숨겨집니다.</p><h4 id="💡-배경지식-1" tabindex="-1">💡 배경지식 <a class="header-anchor" href="#💡-배경지식-1" aria-label="Permalink to &quot;💡 배경지식&quot;">​</a></h4><p><strong>aria-hidden</strong><br> 요소에 <code>aria-hidden=&#39;true&#39;</code>를 명시할 경우, 스크린리더가 해당 요소와 자식 요소를 읽지 않습니다.<br> 모달이 열려있을 때 배경 콘텐츠에 접근하지 못하도록 하는 데 유용합니다.</p><hr><h2 id="🎯-마치며" tabindex="-1">🎯 마치며 <a class="header-anchor" href="#🎯-마치며" aria-label="Permalink to &quot;🎯 마치며&quot;">​</a></h2><p>교보 FE 개편 서비스가 늘어나면서 점점 개발 규모가 커지는데 조금만 신경 써서 UX를 개선하고 차별이나 사용자 제약을 받는 일이 없도록 하면서 고객을 놓치지 않도록 함께 노력했으면 좋겠습니다! ^_^</p>`,58)]))}const o=i(t,[["render",h]]);export{g as __pageData,o as default};
